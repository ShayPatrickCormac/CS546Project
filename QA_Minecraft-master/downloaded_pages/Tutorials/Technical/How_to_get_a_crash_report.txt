Overview
    This tutorial is to help you obtain crash reports generated by Minecraft. Crash reports can help developers confirm and diagnose issues and should be included in bugs on the Bug tracker whenever possible.

Obtaining the crash report file
    Navigate to your game directory as specified in your installation in the Launcher. On Windows, it is %appdata%\.minecraft\ by default
On MacOS, it is ~/Library/Application Support/minecraft by default
On Linux, it is ~/.minecraft by default Navigate into the crash-reports directory in the game directory. If the crash reports directory does not exist, the game may have crashed of a JVM failure, and one or multiple hs_err_pid#####.log file may be present in the game directory instead. Upload this file. There should be files named like crash-yyyy-mm-dd_hh.mm.ss-(client/server).txt. The crash reports are named by the time of crash, with which you can decide which file is your crash report.

Deobfuscating the crash report file
    Deobfuscating the crash report file with obfuscation maps and uploading the deobfuscated version to the Bug tracker may make it easier for Mojang developers to track down the cause of the crash. Retrace is the tool to parse obfuscation maps.[1] To run retrace, you need to have Java 8 or above installed on your device. You can download proguard from their GitHub releases. Decompress the downloaded archive, such as proguard-7.0.1.zip, into a directory. Enter its bin directory. There will be proguardgui.bat and proguardgui.sh executable files available. On Windows, run the proguardgui.bat file., On Unix systems, run the proguardgui.sh file. A Java application will launch. 


Proguard User Interface


, 


ReTrace Section


 On the left side of the User Interface, there is a section, "ReTrace". Enter that section. Download the obfuscation map you need for "Mapping file". Paste the crash report. You can then obtain the deobfuscated crash report for sharing.

References
    v t e Minecraft : Java Edition
    Versions,Demo Locations PC Gamer Demo ( Beta 1.3 )
    Development,Version history Pre-Classic Classic Early Classic Creative Multiplayer Test Survival Test Late Classic Creative Indev Infdev Alpha Beta Full Release Development versions Removed features Blocks Items Unused features Exclusive features Mentioned features Sky dimension Planned versions,Version history,Pre-Classic Classic Early Classic Creative Multiplayer Test Survival Test Late Classic Creative Indev Infdev Alpha Beta Full Release Development versions
    Version history,Pre-Classic Classic Early Classic Creative Multiplayer Test Survival Test Late Classic Creative Indev Infdev Alpha Beta Full Release Development versions
    Technical,Known bugs Minecraft Launcher Hardware requirements al_version Block entity Commands Functions Crashes Data values Classic Indev Pre-flattening Data version Debug screen Formatting codes Heightmap Key codes Minecraft Launcher Protocol version Resource location Screenshot Seed Statistics Tick Spawn chunk Coordinates .minecraft client.jar client.json launcher_profiles.json options.txt Development resources Anvil file format Chunk format Command storage format Entity format Generated structures format hotbar.nbt format Level format Loot tables Map item format Model NBT format Obfuscation map ops.json format Player format raids.dat format Raw JSON text format Region file format Structure file format Schematic file format Scoreboard format Server list format sounds.json Subtitles villages.dat format Legacy development resources Classic level format Classic server protocol Indev level format Alpha level format Infdev 20100624 level format server_level.dat,.minecraft,client.jar client.json launcher_profiles.json options.txt,Development resources,Anvil file format Chunk format Command storage format Entity format Generated structures format hotbar.nbt format Level format Loot tables Map item format Model NBT format Obfuscation map ops.json format Player format raids.dat format Raw JSON text format Region file format Structure file format Schematic file format Scoreboard format Server list format sounds.json Subtitles villages.dat format,Legacy development resources,Classic level format Classic server protocol Indev level format Alpha level format Infdev 20100624 level format server_level.dat
    .minecraft,client.jar client.json launcher_profiles.json options.txt
    Development resources,Anvil file format Chunk format Command storage format Entity format Generated structures format hotbar.nbt format Level format Loot tables Map item format Model NBT format Obfuscation map ops.json format Player format raids.dat format Raw JSON text format Region file format Structure file format Schematic file format Scoreboard format Server list format sounds.json Subtitles villages.dat format
    Legacy development resources,Classic level format Classic server protocol Indev level format Alpha level format Infdev 20100624 level format server_level.dat
    Multiplayer,Server Minecraft Realms Server list server.properties Server requirements
    Game customization,Skins Capes Resource packs Data packs

